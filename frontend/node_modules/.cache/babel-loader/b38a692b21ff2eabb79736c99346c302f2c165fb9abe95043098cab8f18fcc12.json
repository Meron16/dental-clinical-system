{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Meron  Yenie\\\\dental-clinical-system\\\\frontend\\\\src\\\\pages\\\\appointments\\\\BookAppointment.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport api from \"../../services/api\";\nimport AuthContext from \"../../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookAppointment = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [dentists, setDentists] = useState([]);\n  const [selectedDentist, setSelectedDentist] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState(\"\");\n  const [appointmentType, setAppointmentType] = useState(\"check-up\");\n  const [notes, setNotes] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  // Appointment types\n  const appointmentTypes = [{\n    value: \"check-up\",\n    label: \"Check-up\"\n  }, {\n    value: \"cleaning\",\n    label: \"Cleaning\"\n  }, {\n    value: \"filling\",\n    label: \"Filling\"\n  }, {\n    value: \"extraction\",\n    label: \"Extraction\"\n  }, {\n    value: \"root-canal\",\n    label: \"Root Canal\"\n  }, {\n    value: \"other\",\n    label: \"Other\"\n  }];\n\n  // Fetch dentists on component mount\n  useEffect(() => {\n    const fetchDentists = async () => {\n      try {\n        const res = await api.get(\"/api/dentists\");\n        setDentists(res.data);\n      } catch (err) {\n        setError(\"Failed to fetch dentists. Please try again.\");\n        console.error(err);\n      }\n    };\n    fetchDentists();\n  }, []);\n\n  // Check availability when dentist or date changes\n  useEffect(() => {\n    if (selectedDentist && selectedDate) {\n      checkAvailability();\n    }\n  }, [selectedDentist, selectedDate]);\n  const checkAvailability = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      const formattedDate = selectedDate.toISOString().split(\"T\")[0];\n      const res = await api.get(`/api/appointments/availability/${selectedDentist}/${formattedDate}`);\n      if (!res.data.available) {\n        setAvailableSlots([]);\n        setError(res.data.message || \"No available slots for this date.\");\n        return;\n      }\n\n      // Generate time slots based on working hours and booked appointments\n      const {\n        workingHours,\n        bookedSlots\n      } = res.data;\n      const slots = generateTimeSlots(workingHours.start, workingHours.end, bookedSlots);\n      setAvailableSlots(slots);\n      if (slots.length === 0) {\n        setError(\"No available slots for this date.\");\n      }\n    } catch (err) {\n      setError(\"Failed to check availability. Please try again.\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Generate 30-minute time slots between start and end times, excluding booked slots\n  const generateTimeSlots = (startTime, endTime, bookedSlots) => {\n    const slots = [];\n    const [startHour, startMinute] = startTime.split(\":\").map(Number);\n    const [endHour, endMinute] = endTime.split(\":\").map(Number);\n    let currentHour = startHour;\n    let currentMinute = startMinute;\n    while (currentHour < endHour || currentHour === endHour && currentMinute < endMinute) {\n      const timeString = `${currentHour.toString().padStart(2, \"0\")}:${currentMinute.toString().padStart(2, \"0\")}`;\n\n      // Check if this slot is already booked\n      const isBooked = bookedSlots.some(slot => {\n        return timeString >= slot.startTime && timeString < slot.endTime;\n      });\n      if (!isBooked) {\n        // Calculate end time (30 minutes later)\n        let endHour = currentHour;\n        let endMinute = currentMinute + 30;\n        if (endMinute >= 60) {\n          endHour += 1;\n          endMinute -= 60;\n        }\n        const endTimeString = `${endHour.toString().padStart(2, \"0\")}:${endMinute.toString().padStart(2, \"0\")}`;\n\n        // Only add if end time is within working hours\n        if (endHour < endHour || endHour === endHour && endMinute <= endMinute) {\n          slots.push({\n            startTime: timeString,\n            endTime: endTimeString,\n            label: `${timeString} - ${endTimeString}`\n          });\n        }\n      }\n\n      // Move to next 30-minute slot\n      currentMinute += 30;\n      if (currentMinute >= 60) {\n        currentHour += 1;\n        currentMinute -= 60;\n      }\n    }\n    return slots;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedDentist || !selectedDate || !selectedSlot || !appointmentType) {\n      setError(\"Please fill in all required fields.\");\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(\"\");\n      const slot = availableSlots.find(slot => slot.startTime === selectedSlot);\n      if (!slot) {\n        setError(\"Invalid time slot selected.\");\n        return;\n      }\n      const appointmentData = {\n        dentist: selectedDentist,\n        date: selectedDate.toISOString().split(\"T\")[0],\n        startTime: slot.startTime,\n        endTime: slot.endTime,\n        type: appointmentType,\n        notes\n      };\n      await api.post(\"/api/appointments\", appointmentData);\n      setSuccess(\"Appointment booked successfully!\");\n      setTimeout(() => {\n        navigate(\"/appointments\");\n      }, 2000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to book appointment. Please try again.\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Filter out past dates\n  const filterPastDates = date => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return date >= today;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto py-8 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow overflow-hidden sm:rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-5 sm:px-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-semibold text-gray-900\",\n          children: \"Book an Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 max-w-2xl text-sm text-gray-500\",\n          children: \"Please fill in the details below to schedule your dental appointment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mx-4 mb-4\",\n        role: \"alert\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"block sm:inline\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mx-4 mb-4\",\n        role: \"alert\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"block sm:inline\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"px-4 py-5 sm:p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sm:col-span-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"dentist\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Select Dentist *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"dentist\",\n              name: \"dentist\",\n              value: selectedDentist,\n              onChange: e => setSelectedDentist(e.target.value),\n              className: \"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a dentist --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), dentists.map(dentist => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: dentist._id,\n                children: [\"Dr. \", dentist.user.firstName, \" \", dentist.user.lastName, \" (\", dentist.specialization, \")\"]\n              }, dentist._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sm:col-span-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Select Date *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: selectedDate,\n              onChange: date => setSelectedDate(date),\n              filterDate: filterPastDates,\n              minDate: new Date(),\n              className: \"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sm:col-span-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"time\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Select Time *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"time\",\n              name: \"time\",\n              value: selectedSlot,\n              onChange: e => setSelectedSlot(e.target.value),\n              className: \"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\",\n              required: true,\n              disabled: availableSlots.length === 0,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a time slot --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), availableSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: slot.startTime,\n                children: slot.label\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), availableSlots.length === 0 && selectedDentist && !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-sm text-gray-500\",\n              children: \"No available slots for this date. Please select another date.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sm:col-span-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"type\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Appointment Type *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"type\",\n              name: \"type\",\n              value: appointmentType,\n              onChange: e => setAppointmentType(e.target.value),\n              className: \"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\",\n              required: true,\n              children: appointmentTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type.value,\n                children: type.label\n              }, type.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sm:col-span-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"notes\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Notes (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"notes\",\n              name: \"notes\",\n              rows: 3,\n              value: notes,\n              onChange: e => setNotes(e.target.value),\n              className: \"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\",\n              placeholder: \"Please provide any additional information about your appointment...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading || availableSlots.length === 0,\n            className: \"w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\",\n            children: loading ? \"Processing...\" : \"Book Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(BookAppointment, \"n0TTHNW1D0zPTikP7IUwz5Kn8H0=\", false, function () {\n  return [useNavigate];\n});\n_c = BookAppointment;\nexport default BookAppointment;\nvar _c;\n$RefreshReg$(_c, \"BookAppointment\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useContext","useNavigate","DatePicker","api","AuthContext","jsxDEV","_jsxDEV","BookAppointment","user","navigate","dentists","setDentists","selectedDentist","setSelectedDentist","selectedDate","setSelectedDate","Date","availableSlots","setAvailableSlots","selectedSlot","setSelectedSlot","appointmentType","setAppointmentType","notes","setNotes","loading","setLoading","error","setError","success","setSuccess","appointmentTypes","value","label","fetchDentists","res","get","data","err","console","checkAvailability","formattedDate","toISOString","split","available","message","workingHours","bookedSlots","slots","generateTimeSlots","start","end","length","startTime","endTime","startHour","startMinute","map","Number","endHour","endMinute","currentHour","currentMinute","timeString","toString","padStart","isBooked","some","slot","endTimeString","push","handleSubmit","e","preventDefault","find","appointmentData","dentist","date","type","post","setTimeout","_err$response","_err$response$data","response","filterPastDates","today","setHours","className","children","fileName","lineNumber","columnNumber","role","onSubmit","htmlFor","id","name","onChange","target","required","_id","firstName","lastName","specialization","selected","filterDate","minDate","disabled","index","rows","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Meron  Yenie/dental-clinical-system/frontend/src/pages/appointments/BookAppointment.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport DatePicker from \"react-datepicker\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport api from \"../../services/api\"\r\nimport AuthContext from \"../../contexts/AuthContext\"\r\n\r\nconst BookAppointment = () => {\r\n  const { user } = useContext(AuthContext)\r\n  const navigate = useNavigate()\r\n\r\n  const [dentists, setDentists] = useState([])\r\n  const [selectedDentist, setSelectedDentist] = useState(\"\")\r\n  const [selectedDate, setSelectedDate] = useState(new Date())\r\n  const [availableSlots, setAvailableSlots] = useState([])\r\n  const [selectedSlot, setSelectedSlot] = useState(\"\")\r\n  const [appointmentType, setAppointmentType] = useState(\"check-up\")\r\n  const [notes, setNotes] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(\"\")\r\n  const [success, setSuccess] = useState(\"\")\r\n\r\n  // Appointment types\r\n  const appointmentTypes = [\r\n    { value: \"check-up\", label: \"Check-up\" },\r\n    { value: \"cleaning\", label: \"Cleaning\" },\r\n    { value: \"filling\", label: \"Filling\" },\r\n    { value: \"extraction\", label: \"Extraction\" },\r\n    { value: \"root-canal\", label: \"Root Canal\" },\r\n    { value: \"other\", label: \"Other\" },\r\n  ]\r\n\r\n  // Fetch dentists on component mount\r\n  useEffect(() => {\r\n    const fetchDentists = async () => {\r\n      try {\r\n        const res = await api.get(\"/api/dentists\")\r\n        setDentists(res.data)\r\n      } catch (err) {\r\n        setError(\"Failed to fetch dentists. Please try again.\")\r\n        console.error(err)\r\n      }\r\n    }\r\n\r\n    fetchDentists()\r\n  }, [])\r\n\r\n  // Check availability when dentist or date changes\r\n  useEffect(() => {\r\n    if (selectedDentist && selectedDate) {\r\n      checkAvailability()\r\n    }\r\n  }, [selectedDentist, selectedDate])\r\n\r\n  const checkAvailability = async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError(\"\")\r\n\r\n      const formattedDate = selectedDate.toISOString().split(\"T\")[0]\r\n      const res = await api.get(`/api/appointments/availability/${selectedDentist}/${formattedDate}`)\r\n\r\n      if (!res.data.available) {\r\n        setAvailableSlots([])\r\n        setError(res.data.message || \"No available slots for this date.\")\r\n        return\r\n      }\r\n\r\n      // Generate time slots based on working hours and booked appointments\r\n      const { workingHours, bookedSlots } = res.data\r\n      const slots = generateTimeSlots(workingHours.start, workingHours.end, bookedSlots)\r\n      setAvailableSlots(slots)\r\n\r\n      if (slots.length === 0) {\r\n        setError(\"No available slots for this date.\")\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to check availability. Please try again.\")\r\n      console.error(err)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // Generate 30-minute time slots between start and end times, excluding booked slots\r\n  const generateTimeSlots = (startTime, endTime, bookedSlots) => {\r\n    const slots = []\r\n    const [startHour, startMinute] = startTime.split(\":\").map(Number)\r\n    const [endHour, endMinute] = endTime.split(\":\").map(Number)\r\n\r\n    let currentHour = startHour\r\n    let currentMinute = startMinute\r\n\r\n    while (currentHour < endHour || (currentHour === endHour && currentMinute < endMinute)) {\r\n      const timeString = `${currentHour.toString().padStart(2, \"0\")}:${currentMinute.toString().padStart(2, \"0\")}`\r\n\r\n      // Check if this slot is already booked\r\n      const isBooked = bookedSlots.some((slot) => {\r\n        return timeString >= slot.startTime && timeString < slot.endTime\r\n      })\r\n\r\n      if (!isBooked) {\r\n        // Calculate end time (30 minutes later)\r\n        let endHour = currentHour\r\n        let endMinute = currentMinute + 30\r\n\r\n        if (endMinute >= 60) {\r\n          endHour += 1\r\n          endMinute -= 60\r\n        }\r\n\r\n        const endTimeString = `${endHour.toString().padStart(2, \"0\")}:${endMinute.toString().padStart(2, \"0\")}`\r\n\r\n        // Only add if end time is within working hours\r\n        if (endHour < endHour || (endHour === endHour && endMinute <= endMinute)) {\r\n          slots.push({\r\n            startTime: timeString,\r\n            endTime: endTimeString,\r\n            label: `${timeString} - ${endTimeString}`,\r\n          })\r\n        }\r\n      }\r\n\r\n      // Move to next 30-minute slot\r\n      currentMinute += 30\r\n      if (currentMinute >= 60) {\r\n        currentHour += 1\r\n        currentMinute -= 60\r\n      }\r\n    }\r\n\r\n    return slots\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!selectedDentist || !selectedDate || !selectedSlot || !appointmentType) {\r\n      setError(\"Please fill in all required fields.\")\r\n      return\r\n    }\r\n\r\n    try {\r\n      setLoading(true)\r\n      setError(\"\")\r\n\r\n      const slot = availableSlots.find((slot) => slot.startTime === selectedSlot)\r\n      if (!slot) {\r\n        setError(\"Invalid time slot selected.\")\r\n        return\r\n      }\r\n\r\n      const appointmentData = {\r\n        dentist: selectedDentist,\r\n        date: selectedDate.toISOString().split(\"T\")[0],\r\n        startTime: slot.startTime,\r\n        endTime: slot.endTime,\r\n        type: appointmentType,\r\n        notes,\r\n      }\r\n\r\n      await api.post(\"/api/appointments\", appointmentData)\r\n\r\n      setSuccess(\"Appointment booked successfully!\")\r\n      setTimeout(() => {\r\n        navigate(\"/appointments\")\r\n      }, 2000)\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Failed to book appointment. Please try again.\")\r\n      console.error(err)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // Filter out past dates\r\n  const filterPastDates = (date) => {\r\n    const today = new Date()\r\n    today.setHours(0, 0, 0, 0)\r\n    return date >= today\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\r\n        <div className=\"px-4 py-5 sm:px-6\">\r\n          <h1 className=\"text-2xl font-semibold text-gray-900\">Book an Appointment</h1>\r\n          <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\r\n            Please fill in the details below to schedule your dental appointment.\r\n          </p>\r\n        </div>\r\n\r\n        {error && (\r\n          <div\r\n            className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mx-4 mb-4\"\r\n            role=\"alert\"\r\n          >\r\n            <span className=\"block sm:inline\">{error}</span>\r\n          </div>\r\n        )}\r\n\r\n        {success && (\r\n          <div\r\n            className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mx-4 mb-4\"\r\n            role=\"alert\"\r\n          >\r\n            <span className=\"block sm:inline\">{success}</span>\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"px-4 py-5 sm:p-6\">\r\n          <div className=\"grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6\">\r\n            <div className=\"sm:col-span-3\">\r\n              <label htmlFor=\"dentist\" className=\"block text-sm font-medium text-gray-700\">\r\n                Select Dentist *\r\n              </label>\r\n              <select\r\n                id=\"dentist\"\r\n                name=\"dentist\"\r\n                value={selectedDentist}\r\n                onChange={(e) => setSelectedDentist(e.target.value)}\r\n                className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                required\r\n              >\r\n                <option value=\"\">-- Select a dentist --</option>\r\n                {dentists.map((dentist) => (\r\n                  <option key={dentist._id} value={dentist._id}>\r\n                    Dr. {dentist.user.firstName} {dentist.user.lastName} ({dentist.specialization})\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"sm:col-span-3\">\r\n              <label htmlFor=\"date\" className=\"block text-sm font-medium text-gray-700\">\r\n                Select Date *\r\n              </label>\r\n              <DatePicker\r\n                selected={selectedDate}\r\n                onChange={(date) => setSelectedDate(date)}\r\n                filterDate={filterPastDates}\r\n                minDate={new Date()}\r\n                className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"sm:col-span-3\">\r\n              <label htmlFor=\"time\" className=\"block text-sm font-medium text-gray-700\">\r\n                Select Time *\r\n              </label>\r\n              <select\r\n                id=\"time\"\r\n                name=\"time\"\r\n                value={selectedSlot}\r\n                onChange={(e) => setSelectedSlot(e.target.value)}\r\n                className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                required\r\n                disabled={availableSlots.length === 0}\r\n              >\r\n                <option value=\"\">-- Select a time slot --</option>\r\n                {availableSlots.map((slot, index) => (\r\n                  <option key={index} value={slot.startTime}>\r\n                    {slot.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {availableSlots.length === 0 && selectedDentist && !loading && (\r\n                <p className=\"mt-1 text-sm text-gray-500\">\r\n                  No available slots for this date. Please select another date.\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"sm:col-span-3\">\r\n              <label htmlFor=\"type\" className=\"block text-sm font-medium text-gray-700\">\r\n                Appointment Type *\r\n              </label>\r\n              <select\r\n                id=\"type\"\r\n                name=\"type\"\r\n                value={appointmentType}\r\n                onChange={(e) => setAppointmentType(e.target.value)}\r\n                className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                required\r\n              >\r\n                {appointmentTypes.map((type) => (\r\n                  <option key={type.value} value={type.value}>\r\n                    {type.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"sm:col-span-6\">\r\n              <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700\">\r\n                Notes (Optional)\r\n              </label>\r\n              <textarea\r\n                id=\"notes\"\r\n                name=\"notes\"\r\n                rows={3}\r\n                value={notes}\r\n                onChange={(e) => setNotes(e.target.value)}\r\n                className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                placeholder=\"Please provide any additional information about your appointment...\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-6\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading || availableSlots.length === 0}\r\n              className=\"w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\r\n            >\r\n              {loading ? \"Processing...\" : \"Book Appointment\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookAppointment\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}