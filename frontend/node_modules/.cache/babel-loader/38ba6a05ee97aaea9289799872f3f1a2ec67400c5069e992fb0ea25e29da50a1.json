{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Meron  Yenie\\\\dental-clinical-system\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user data if token exists\n  useEffect(() => {\n    const loadUser = async () => {\n      if (token) {\n        try {\n          api.defaults.headers.common[\"x-auth-token\"] = token;\n          const res = await api.get(\"/api/auth/me\");\n          setUser(res.data);\n        } catch (err) {\n          console.error(\"Error loading user:\", err);\n          localStorage.removeItem(\"token\");\n          setToken(null);\n          setError(\"Session expired. Please login again.\");\n        }\n      }\n      setLoading(false);\n    };\n    loadUser();\n  }, [token]);\n\n  // Register user\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const res = await api.post(\"/api/auth/register\", userData);\n      localStorage.setItem(\"token\", res.data.token);\n      setToken(res.data.token);\n      return true;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Registration failed\");\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const res = await api.post(\"/api/auth/login\", {\n        email,\n        password\n      });\n      localStorage.setItem(\"token\", res.data.token);\n      setToken(res.data.token);\n      return true;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Login failed\");\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n    setUser(null);\n    delete api.defaults.headers.common[\"x-auth-token\"];\n  };\n\n  // Clear error\n  const clearError = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      loading,\n      error,\n      register,\n      login,\n      logout,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"hqCNUyugmrc2HYZti9GUIvykIJ0=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","loadUser","defaults","headers","common","res","get","data","err","console","removeItem","register","userData","post","setItem","_err$response","_err$response$data","response","message","login","email","password","_err$response2","_err$response2$data","logout","clearError","Provider","value","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Meron  Yenie/dental-clinical-system/frontend/src/contexts/AuthContext.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { createContext, useState, useEffect } from \"react\"\r\nimport api from \"../services/api\"\r\n\r\nexport const AuthContext = createContext()\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null)\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\"))\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n\r\n  // Load user data if token exists\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      if (token) {\r\n        try {\r\n          api.defaults.headers.common[\"x-auth-token\"] = token\r\n          const res = await api.get(\"/api/auth/me\")\r\n          setUser(res.data)\r\n        } catch (err) {\r\n          console.error(\"Error loading user:\", err)\r\n          localStorage.removeItem(\"token\")\r\n          setToken(null)\r\n          setError(\"Session expired. Please login again.\")\r\n        }\r\n      }\r\n      setLoading(false)\r\n    }\r\n\r\n    loadUser()\r\n  }, [token])\r\n\r\n  // Register user\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true)\r\n      const res = await api.post(\"/api/auth/register\", userData)\r\n      localStorage.setItem(\"token\", res.data.token)\r\n      setToken(res.data.token)\r\n      return true\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Registration failed\")\r\n      return false\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // Login user\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true)\r\n      const res = await api.post(\"/api/auth/login\", { email, password })\r\n      localStorage.setItem(\"token\", res.data.token)\r\n      setToken(res.data.token)\r\n      return true\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Login failed\")\r\n      return false\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // Logout user\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\")\r\n    setToken(null)\r\n    setUser(null)\r\n    delete api.defaults.headers.common[\"x-auth-token\"]\r\n  }\r\n\r\n  // Clear error\r\n  const clearError = () => {\r\n    setError(null)\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        token,\r\n        loading,\r\n        error,\r\n        register,\r\n        login,\r\n        logout,\r\n        clearError,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthContext\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}